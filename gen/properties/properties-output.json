{
    "definitions": {
        "client_group_quota": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/client_group_byte_rate_quota.h#L29",
            "properties": {
                "clients_prefix": {
                    "type": "string"
                },
                "group_name": {
                    "type": "string"
                },
                "quota": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "config::broker_authn_endpoint": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/broker_authn_endpoint.h#L42",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "config::endpoint_tls_config": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/endpoint_tls_config.h#L21",
            "properties": {
                "config": {
                    "$ref": "#/defintions/config::tls_config"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "config::rest_authn_endpoint": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/rest_authn_endpoint.h#L42",
            "properties": {
                "address": {
                    "type": "string"
                },
                "authentication_method": {
                    "$ref": "#/definitions/config::rest_authn_method"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "config::rest_authn_method": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/rest_authn_endpoint.h#L31",
            "enum": [
                "none",
                "http_basic"
            ]
        },
        "config::tls_config": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/tls_config.h#L49",
            "properties": {
                "cert_file": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "key_file": {
                    "type": "string"
                },
                "require_client_auth": {
                    "type": "boolean"
                },
                "truststore_file": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "endpoint_tls_config": {
            "$ref": "#/definitions/config::endpoint_tls_config"
        },
        "model::broker_endpoint": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L88",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "model::cleanup_policy_bitflags": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/fundamental.h#L72",
            "enum": [
                "none",
                "delete",
                "compact"
            ]
        },
        "model::cloud_credentials_source": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L454",
            "enum": [
                "config_file",
                "aws_instance_metadata",
                "sts",
                "gcp_instance_metadata"
            ]
        },
        "model::cloud_storage_backend": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L481",
            "enum": [
                "aws",
                "google_s3_compat",
                "azure",
                "minio",
                "unknown"
            ]
        },
        "model::cloud_storage_chunk_eviction_strategy": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L524",
            "enum": [
                "eager",
                "capped",
                "predictive"
            ]
        },
        "model::compression": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/compression.h#L36",
            "enum": [
                "none",
                "gzip",
                "snappy",
                "lz4",
                "zstd",
                "producer"
            ]
        },
        "model::leader_balancer_mode": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L504",
            "enum": [
                "greedy_balanced_shards",
                "random_hill_climbing"
            ]
        },
        "model::node_id": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L36",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
        },
        "model::partition_autobalancing_mode": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L463",
            "enum": [
                "off",
                "node_add",
                "continuous"
            ]
        },
        "model::rack_id": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/metadata.h#L60",
            "type": "string"
        },
        "model::timestamp_type": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/model/timestamp.h#L30",
            "enum": [
                "create_time",
                "append_time"
            ]
        },
        "net::unresolved_address": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/net/unresolved_address.h#L27",
            "properties": {
                "address": {
                    "type": "string"
                },
                "port": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            }
        },
        "pandaproxy::schema_registry::schema_id_validation_mode": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/pandaproxy/schema_registry/schema_id_validation.h#L22",
            "enum": [
                "none",
                "redpanda",
                "compat"
            ]
        },
        "retention_duration_property": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/property.h#L878",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
        },
        "seed_server": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/seed_server.h#L24",
            "properties": {
                "host": {
                    "$ref": "#/definitions/net::unresolved_address"
                }
            },
            "type": "object"
        },
        "throughput_control_group": {
            "defined_in": "https://github.com/redpanda-data/redpanda/blob/dev/src/v/config/throughput_control_group.h#L36",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "tls_config": {
            "$ref": "#/defintions/config::tls_config"
        }
    },
    "properties": {
        "abort_index_segment_size": {
            "default": 50000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Capacity (in number of txns) of an abort index segment",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "abort_index_segment_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "abort_timed_out_transactions_interval_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "How often look for the inactive transactions and abort them",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "abort_timed_out_transactions_interval_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "admin": {
            "default": "{model::broker_endpoint(net::unresolved_address(\"127.0.0.1\", 9644))}",
            "defined_in": "src/v/config/node_config.cc",
            "description": "Address and port of admin server",
            "name": "admin",
            "nullable": false,
            "type": "#/definitions/model::broker_endpoint",
            "visibility": "user"
        },
        "admin_api_doc_dir": {
            "default": "/usr/share/redpanda/admin-api-doc",
            "defined_in": "src/v/config/node_config.cc",
            "description": "Admin API doc directory",
            "name": "admin_api_doc_dir",
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "admin_api_require_auth": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Whether admin API clients must provide HTTP Basic authentication headers",
            "name": "admin_api_require_auth",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "admin_api_tls": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "TLS configuration for admin HTTP server",
            "name": "admin_api_tls",
            "nullable": false,
            "type": "#/definitions/endpoint_tls_config",
            "visibility": "user"
        },
        "advertised_pandaproxy_api": {
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "Rest API address and port to publish to client",
            "name": "advertised_pandaproxy_api",
            "nullable": false,
            "type": "#/definitions/model::broker_endpoint"
        },
        "aggregate_metrics": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable aggregations of metrics returned by the prometheus '/metrics' endpoint. Metric aggregation is performed by summing the values of samples by labels. Aggregations are performed where it makes sense by the shard and/or partition labels.",
            "name": "aggregate_metrics",
            "needs_restart": true,
            "nullable": false,
            "type": "boolean"
        },
        "alter_topic_cfg_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time to wait for entries replication in controller log when executing alter configuration requst",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "alter_topic_cfg_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "api_doc_dir": {
            "default": "/usr/share/redpanda/proxy-api-doc",
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "API doc directory",
            "name": "api_doc_dir",
            "nullable": false,
            "type": "string"
        },
        "append_chunk_size": {
            "default": 16384,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of direct write operations to disk in bytes",
            "name": "append_chunk_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "auto_create_topics_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Allow topic auto creation",
            "name": "auto_create_topics_enabled",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "broker_tls": {
            "default": "config::tls_config()",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "TLS configuration for the brokers",
            "name": "broker_tls",
            "nullable": false,
            "type": "#/definitions/config::tls_config"
        },
        "brokers": {
            "default": "std::vector<net::unresolved_address>({{\"127.0.0.1\", 9092}})",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "List of address and port of the brokers",
            "items": {
                "type": "#/definitions/net::unresolved_address"
            },
            "name": "brokers",
            "nullable": false,
            "type": "array"
        },
        "client_cache_max_size": {
            "default": 10,
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "The maximum number of kafka clients in the LRU cache",
            "name": "client_cache_max_size",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "client_identifier": {
            "default": "test_client",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Identifier to use within the kafka request header",
            "name": "client_identifier",
            "nullable": true,
            "type": "string"
        },
        "client_keep_alive": {
            "default": "5min",
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "Time in milliseconds that an idle connection may remain open",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "client_keep_alive",
            "needs_restart": true,
            "nullable": false,
            "type": "integer"
        },
        "cloud_storage_access_key": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "AWS access key",
            "name": "cloud_storage_access_key",
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_api_endpoint": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Optional API endpoint",
            "name": "cloud_storage_api_endpoint",
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_api_endpoint_port": {
            "default": 443,
            "defined_in": "src/v/config/configuration.cc",
            "description": "TLS port override",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_api_endpoint_port",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "cloud_storage_bucket": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "AWS bucket that should be used to store data",
            "name": "cloud_storage_bucket",
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_cache_check_interval_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout to check if cache eviction should be triggered",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_cache_check_interval",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_cache_directory": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Directory for archival cache. Should be present when `cloud_storage_enabled` is present",
            "name": "cloud_storage_cache_directory",
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_cache_size": {
            "default": 21474836480,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max size of archival cache",
            "name": "cloud_storage_cache_size",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "cloud_storage_credentials_host": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The hostname to connect to for retrieving role based credentials. Derived from cloud_storage_credentials_source if not set. Only required when using IAM role based access.",
            "name": "cloud_storage_credentials_host",
            "needs_restart": true,
            "nullable": true,
            "type": "string",
            "visibility": "tunable"
        },
        "cloud_storage_credentials_source": {
            "default": "model::cloud_credentials_source::config_file",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The source of credentials to connect to cloud services",
            "name": "cloud_storage_credentials_source",
            "needs_restart": true,
            "nullable": false,
            "type": "#/definitions/model::cloud_credentials_source",
            "visibility": "user"
        },
        "cloud_storage_disable_tls": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable TLS for all S3 connections",
            "name": "cloud_storage_disable_tls",
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "cloud_storage_enable_compacted_topic_reupload": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable re-uploading data for compacted topics",
            "name": "cloud_storage_enable_compacted_topic_reupload",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enable_remote_read": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default remote read config value for new topics",
            "name": "cloud_storage_enable_remote_read",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enable_remote_write": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default remote write value for new topics",
            "name": "cloud_storage_enable_remote_write",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "cloud_storage_enabled": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable archival storage",
            "name": "cloud_storage_enabled",
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "cloud_storage_housekeeping_interval_ms": {
            "default": "5min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval for cloud storage housekeeping tasks",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_housekeeping_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_initial_backoff_ms": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Initial backoff time for exponetial backoff algorithm (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_initial_backoff_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_manifest_upload_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Manifest upload timeout (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_manifest_upload_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_connection_idle_time_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max https connection idle time (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_max_connection_idle_time_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_connections": {
            "default": 20,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max number of simultaneous connections to S3 per shard (includes connections used for both uploads and downloads)",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_max_connections",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "cloud_storage_max_materialized_segments_per_shard": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum concurrent readers of remote data per CPU core.  If unset, value of `topic_partitions_per_shard` multiplied by 2 is used.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_max_materialized_segments_per_shard",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_readers_per_shard": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum concurrent readers of remote data per CPU core.  If unset, value of `topic_partitions_per_shard` is used, i.e. one reader per partition if the shard is at its maximum partition capacity.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "cloud_storage_max_readers_per_shard",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_max_segments_pending_deletion_per_partition": {
            "default": 5000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "The per-partition limit for the number of segments pending deletion from the cloud. Segments can be deleted due to retention or compaction. If this limit is breached and deletion fails, then segments will be orphaned in the cloud and will have to be removed manually",
            "name": "cloud_storage_max_segments_pending_deletion_per_partition",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_metadata_sync_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for SI metadata synchronization",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_metadata_sync_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_readreplica_manifest_sync_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout to check if new data is available for partition in S3 for read replica",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_readreplica_manifest_sync_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_reconciliation_ms": {
            "default": "1s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval at which the archival service runs reconciliation (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_reconciliation_interval_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_region": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "AWS region that houses the bucket used for storage",
            "name": "cloud_storage_region",
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_roles_operation_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for IAM role related operations (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_roles_operation_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_secret_key": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "AWS secret key",
            "is_secret": true,
            "name": "cloud_storage_secret_key",
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_segment_max_upload_interval_sec": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time that segment can be kept locally without uploading it to the remote storage (sec)",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "cloud_storage_segment_max_upload_interval_sec",
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_segment_upload_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Log segment upload timeout (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_segment_upload_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_trust_file": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Path to certificate that should be used to validate server certificate during TLS handshake",
            "name": "cloud_storage_trust_file",
            "nullable": true,
            "type": "string",
            "visibility": "user"
        },
        "cloud_storage_upload_ctrl_d_coeff": {
            "default": 0.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "derivative coefficient for upload PID controller.",
            "name": "cloud_storage_upload_ctrl_d_coeff",
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "cloud_storage_upload_ctrl_max_shares": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "maximum number of IO and CPU shares that archival upload can use",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_upload_ctrl_max_shares",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_upload_ctrl_min_shares": {
            "default": 100,
            "defined_in": "src/v/config/configuration.cc",
            "description": "minimum number of IO and CPU shares that archival upload can use",
            "maximum": 32767,
            "minimum": -32768,
            "name": "cloud_storage_upload_ctrl_min_shares",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_upload_ctrl_p_coeff": {
            "default": -2.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "proportional coefficient for upload PID controller",
            "name": "cloud_storage_upload_ctrl_p_coeff",
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "cloud_storage_upload_ctrl_update_interval_ms": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_upload_ctrl_update_interval_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_upload_loop_initial_backoff_ms": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Initial backoff interval when there is nothing to upload for a partition (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_upload_loop_initial_backoff_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cloud_storage_upload_loop_max_backoff_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max backoff interval when there is nothing to upload for a partition (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "cloud_storage_upload_loop_max_backoff_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "cluster_id": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cluster identifier",
            "name": "cluster_id",
            "needs_restart": false,
            "nullable": true,
            "type": "string"
        },
        "compacted_log_segment_size": {
            "default": 268435456,
            "defined_in": "src/v/config/configuration.cc",
            "description": "How large in bytes should each compacted log segment be (default 256MiB)",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "compacted_log_segment_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "compaction_ctrl_backlog_size": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "target backlog size for compaction controller. if not set compaction target compaction backlog would be equal to ",
            "name": "compaction_ctrl_backlog_size",
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "compaction_ctrl_d_coeff": {
            "default": 0.2,
            "defined_in": "src/v/config/configuration.cc",
            "description": "derivative coefficient for compaction PID controller.",
            "name": "compaction_ctrl_d_coeff",
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "compaction_ctrl_i_coeff": {
            "default": 0.0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "integral coefficient for compaction PID controller.",
            "name": "compaction_ctrl_i_coeff",
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "compaction_ctrl_max_shares": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "maximum number of IO and CPU shares that compaction process can use",
            "maximum": 32767,
            "minimum": -32768,
            "name": "compaction_ctrl_max_shares",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "compaction_ctrl_min_shares": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "minimum number of IO and CPU shares that compaction process can use",
            "maximum": 32767,
            "minimum": -32768,
            "name": "compaction_ctrl_min_shares",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "compaction_ctrl_p_coeff": {
            "default": -12.5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "proportional coefficient for compaction PID controller. This has to be negative since compaction backlog should decrease when number of compaction shares increases",
            "name": "compaction_ctrl_p_coeff",
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "compaction_ctrl_update_interval_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "compaction_ctrl_update_interval_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "consumer_heartbeat_interval": {
            "default": "500ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Interval (in milliseconds) for consumer heartbeats",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_heartbeat_interval_ms",
            "nullable": false,
            "type": "integer"
        },
        "consumer_instance_timeout": {
            "default": "std::chrono::minutes{5}",
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "How long to wait for an idle consumer before removing it",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_instance_timeout_ms",
            "nullable": false,
            "type": "integer"
        },
        "consumer_rebalance_timeout": {
            "default": "2s",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Timeout (in milliseconds) for consumer rebalance",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_rebalance_timeout_ms",
            "nullable": false,
            "type": "integer"
        },
        "consumer_request_max_bytes": {
            "default": 1048576,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Max bytes to fetch per request",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "consumer_request_max_bytes",
            "nullable": false,
            "type": "integer"
        },
        "consumer_request_timeout": {
            "default": "100ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Interval (in milliseconds) for consumer request timeout",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_request_timeout_ms",
            "nullable": false,
            "type": "integer"
        },
        "consumer_session_timeout": {
            "default": "10s",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Timeout (in milliseconds) for consumer session",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "consumer_session_timeout_ms",
            "nullable": false,
            "type": "integer"
        },
        "controller_backend_housekeeping_interval_ms": {
            "default": "1s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval between iterations of controller backend housekeeping loop",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "controller_backend_housekeeping_interval_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_acls_and_users_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulationin controller acls and users operations limit",
            "name": "controller_log_accummulation_rps_capacity_acls_and_users_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_configuration_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulationin controller configuration operations limit",
            "name": "controller_log_accummulation_rps_capacity_configuration_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_move_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulationin controller move operations limit",
            "name": "controller_log_accummulation_rps_capacity_move_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_node_management_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulationin controller node management operations limit",
            "name": "controller_log_accummulation_rps_capacity_node_management_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "controller_log_accummulation_rps_capacity_topic_operations": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum capacity of rate limit accumulationin controller topic operations limit",
            "name": "controller_log_accummulation_rps_capacity_topic_operations",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "coproc_max_batch_size": {
            "default": 32768,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum amount of bytes to read from one topic read",
            "name": "coproc_max_batch_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "coproc_max_inflight_bytes": {
            "default": 10485760,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum amountt of inflight bytes when sending data to wasm engine",
            "name": "coproc_max_inflight_bytes",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "coproc_max_ingest_bytes": {
            "default": 655360,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum amount of data to hold from input logs in memory",
            "name": "coproc_max_ingest_bytes",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "coproc_offset_flush_interval_ms": {
            "default": "300000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interval for which all coprocessor offsets are flushed to disk",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "coproc_offset_flush_interval_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "coproc_supervisor_server": {
            "default": "net::unresolved_address(\"127.0.0.1\", 43189)",
            "defined_in": "src/v/config/node_config.cc",
            "description": "IpAddress and port for supervisor service",
            "name": "coproc_supervisor_server",
            "nullable": false,
            "type": "#/definitions/net::unresolved_address",
            "visibility": "user"
        },
        "create_topic_timeout_ms": {
            "default": "2'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout (ms) to wait for new topic creation",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "create_topic_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "dashboard_dir": {
            "defined_in": "src/v/config/node_config.cc",
            "description": null,
            "is_deprecated": true,
            "name": "dashboard_dir",
            "nullable": false,
            "type": null
        },
        "data_directory": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "Place where redpanda will keep the data",
            "name": "data_directory",
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "default_num_windows": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default number of quota tracking windows",
            "maximum": 32767,
            "minimum": -32768,
            "name": "default_num_windows",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "default_topic_partitions": {
            "default": 1,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default number of partitions per topic",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "default_topic_partitions",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "default_topic_replication": {
            "default": 1,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default replication factor for new topics",
            "maximum": 32767,
            "minimum": -32768,
            "name": "default_topic_replications",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "default_window_sec": {
            "default": "std::chrono::milliseconds(1000)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default quota tracking window size in milliseconds",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "default_window_sec",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "delete_retention_ms": {
            "default": "10080min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "delete segments older than this - default 1 week",
            "name": "delete_retention_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/retention_duration_property",
            "visibility": "user"
        },
        "developer_mode": {
            "default": false,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Skips most of the checks performed at startup, not recomended for production use",
            "name": "developer_mode",
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "disable_batch_cache": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable batch cache in log manager",
            "name": "disable_batch_cache",
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "disable_metrics": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable registering metrics exposed on the internal metrics endpoint (/metrics)",
            "name": "disable_metrics",
            "nullable": false,
            "type": "boolean"
        },
        "disable_public_metrics": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disable registering metrics exposed on the public metrics endpoint (/public_metrics)",
            "name": "disable_public_metrics",
            "nullable": false,
            "type": "boolean"
        },
        "empty_seed_starts_cluster": {
            "default": true,
            "defined_in": "src/v/config/node_config.cc",
            "description": "If true, an empty seed_servers list will denote that this node should form a cluster. At most one node in the cluster should be configured configured with an empty seed_servers list. If no such configured node exists, or if configured to false, all nodes denoted by the seed_servers list must be identical among those nodes' configurations, and those nodes will form the initial cluster.",
            "name": "empty_seed_starts_cluster",
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_admin_api": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "enable_admin_api",
            "nullable": false,
            "type": null
        },
        "enable_auto_rebalance_on_node_add": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable automatic partition rebalancing when new nodes are added",
            "is_deprecated": true,
            "name": "enable_auto_rebalance_on_node_add",
            "needs_restart": false,
            "nullable": false,
            "type": null,
            "visibility": "deprecated"
        },
        "enable_central_config": {
            "defined_in": "src/v/config/node_config.cc",
            "description": null,
            "is_deprecated": true,
            "name": "enable_central_config",
            "nullable": false,
            "type": null
        },
        "enable_controller_log_rate_limiting": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables limiting of controller log write rate",
            "name": "enable_controller_log_rate_limiting",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_coproc": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable coprocessing mode",
            "name": "enable_coproc",
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_idempotence": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable idempotent producer",
            "name": "enable_idempotence",
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_leader_balancer": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable automatic leadership rebalancing",
            "name": "enable_leader_balancer",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_metrics_reporter": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable cluster metrics reporter",
            "name": "enable_metrics_reporter",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_pid_file": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable pid file. You probably don't want to change this.",
            "name": "enable_pid_file",
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "enable_rack_awareness": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enables rack-aware replica assignment",
            "name": "enable_rack_awareness",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_sasl": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable SASL authentication for Kafka connections, authorization is required. see also `kafka_enable_authorization`",
            "name": "enable_sasl",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "enable_transactions": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable transactions",
            "name": "enable_transactions",
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "features_auto_enable": {
            "default": true,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Whether new feature flags may auto-activate after upgrades (true) or must wait for manual activation via the admin API (false)",
            "name": "features_auto_enable",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "fetch_max_bytes": {
            "default": 57671680,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of bytes returned in fetch request",
            "name": "fetch_max_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "fetch_reads_debounce_timeout": {
            "default": "1ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time to wait for next read in fetch request when requested min bytes wasn't reached",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "fetch_reads_debounce_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "fetch_session_eviction_timeout_ms": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum time before which unused session will get evicted from sessions. Maximum time after which inactive session will be deleted is two time given configuration valuecache",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "fetch_session_eviction_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "full_raft_configuration_recovery_pattern": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "Recover raft configuration on start for NTPs matching pattern",
            "name": "full_raft_configuration_recovery_pattern",
            "nullable": false,
            "type": "string",
            "visibility": "tunable"
        },
        "group_initial_rebalance_delay": {
            "default": "3s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Extra delay (ms) added to rebalance phase to wait for new members",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_initial_rebalance_delay",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "group_max_session_timeout_ms": {
            "default": "300s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures. ",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_max_session_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer"
        },
        "group_min_session_timeout_ms": {
            "default": "6000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "The minimum allowed session timeout for registered consumers. Shorter timeouts result in quicker failure detection at the cost of more frequent consumer heartbeating, which can overwhelm broker resources.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_min_session_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer"
        },
        "group_new_member_join_timeout": {
            "default": "30'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for new member joins",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "group_new_member_join_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "group_topic_partitions": {
            "default": 16,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of partitions in the internal group membership topic",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "group_topic_partitions",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "health_manager_tick_interval": {
            "default": "3min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "How often the health manager runs",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "health_manager_tick_interval",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "health_monitor_max_metadata_age": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max age of metadata cached in the health monitor of non controller node",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "health_monitor_max_metadata_age",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "health_monitor_tick_interval": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "How often health monitor refresh cluster state",
            "is_deprecated": true,
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "health_monitor_tick_interval",
            "needs_restart": false,
            "nullable": false,
            "type": null,
            "visibility": "deprecated"
        },
        "id_allocator_batch_size": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Id allocator allocates messages in batches (each batch is a one log record) and then serves requests from memory without touching the log until the batch is exhausted.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "id_allocator_batch_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "id_allocator_log_capacity": {
            "default": 100,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Capacity of the id_allocator log in number of messages. Once it reached id_allocator_stm should compact the log.",
            "maximum": 32767,
            "minimum": -32768,
            "name": "id_allocator_log_capacity",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "id_allocator_replication": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "id_allocator_replication",
            "nullable": false,
            "type": null
        },
        "internal_topic_replication_factor": {
            "default": 3,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target replication factor for internal topics",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "internal_topic_replication_factor",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "join_retry_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time between cluster join retries in milliseconds",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "join_retry_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_admin_topic_api_rate": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target quota rate (partition mutations per default_window_sec)",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_admin_topic_api_rate",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_api": {
            "default": {
                "address": "net::unresolved_address(\"127.0.0.1\", 9092)",
                "authn_method": "std::nullopt"
            },
            "defined_in": "src/v/config/node_config.cc",
            "description": "Address and port of an interface to listen for Kafka API requests",
            "name": "kafka_api",
            "nullable": false,
            "type": "#/definitions/config::broker_authn_endpoint",
            "visibility": "user"
        },
        "kafka_api_tls": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "TLS configuration for Kafka API endpoint",
            "name": "kafka_api_tls",
            "nullable": false,
            "type": "#/definitions/endpoint_tls_config",
            "visibility": "user"
        },
        "kafka_batch_max_bytes": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum size of a batch processed by server. If batch is compressed the limit applies to compressed batch size",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_batch_max_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_connection_rate_limit": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum connections per second for one core",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "name": "kafka_connection_rate_limit",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_connection_rate_limit_overrides": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "Overrides for specific ips for maximum connections per second for one core",
            "items": {
                "type": "string"
            },
            "name": "kafka_connection_rate_limit_overrides",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "kafka_connections_max": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of Kafka client connections per broker",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_connections_max",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_connections_max_overrides": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "Per-IP overrides of kafka connection count limit, list of <ip>:<count> strings",
            "items": {
                "type": "string"
            },
            "name": "kafka_connections_max_overrides",
            "needs_restart": false,
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "kafka_connections_max_per_ip": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of Kafka client connections from each IP address, per broker",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_connections_max_per_ip",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_enable_authorization": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable authorization for Kafka connections. Values:- `nil`: Ignored. Authorization is enabled with `enable_sasl: true`; `true`: authorization is required; `false`: authorization is disabled. See also: `enable_sasl` and `kafka_api[].authentication_method`",
            "name": "kafka_enable_authorization",
            "needs_restart": false,
            "nullable": true,
            "type": "boolean",
            "visibility": "user"
        },
        "kafka_group_recovery_timeout_ms": {
            "default": "30'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Kafka group recovery timeout expressed in milliseconds",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_group_recovery_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_max_bytes_per_fetch": {
            "default": 67108864,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Limit fetch responses to this many bytes, even if total of partition bytes limits is higher",
            "name": "kafka_max_bytes_per_fetch",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_mtls_principal_mapping_rules": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Principal Mapping Rules for mTLS Authentication on the Kafka API",
            "items": {
                "type": "string"
            },
            "name": "kafka_mtls_principal_mapping_rules",
            "needs_restart": false,
            "nullable": true,
            "type": "array",
            "visibility": "user"
        },
        "kafka_qdc_depth_alpha": {
            "default": 0.8,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Smoothing factor for kafka queue depth control depth tracking.",
            "name": "kafka_qdc_depth_alpha",
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "kafka_qdc_depth_update_ms": {
            "default": "7s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Update frequency for kafka queue depth control.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_qdc_depth_update_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_enable": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Enable kafka queue depth control.",
            "name": "kafka_qdc_enable",
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "kafka_qdc_idle_depth": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Queue depth when idleness is detected in kafka queue depth control.",
            "name": "kafka_qdc_idle_depth",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_latency_alpha": {
            "default": 0.002,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Smoothing parameter for kafka queue depth control latency tracking.",
            "name": "kafka_qdc_latency_alpha",
            "nullable": false,
            "type": "number",
            "visibility": "tunable"
        },
        "kafka_qdc_max_depth": {
            "default": 100,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum queue depth used in kafka queue depth control.",
            "name": "kafka_qdc_max_depth",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_max_latency_ms": {
            "default": "80ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max latency threshold for kafka queue depth control depth tracking.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_qdc_max_latency_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "kafka_qdc_min_depth": {
            "default": 1,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum queue depth used in kafka queue depth control.",
            "name": "kafka_qdc_min_depth",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_window_count": {
            "default": 12,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of windows used in kafka queue depth control latency tracking.",
            "name": "kafka_qdc_window_count",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_qdc_window_size_ms": {
            "default": "1500ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Window size for kafka queue depth control latency tracking.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kafka_qdc_window_size_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_request_max_bytes": {
            "default": 104857600,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum size of a single request processed via Kafka API",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_request_max_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_rpc_server_stream_recv_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Userspace receive buffer max size in bytes",
            "name": "kafka_rpc_server_stream_recv_buf",
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_rpc_server_tcp_recv_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Kafka server TCP receive buffer size in bytes.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "kafka_rpc_server_tcp_recv_buf",
            "nullable": true,
            "type": "integer"
        },
        "kafka_rpc_server_tcp_send_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Kafka server TCP transmit buffer size in bytes.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "kafka_rpc_server_tcp_send_buf",
            "nullable": true,
            "type": "integer"
        },
        "kafka_tcp_keepalive_idle_timeout_seconds": {
            "default": "120s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "TCP keepalive idle timeout in seconds for kafka connections. This describes the timeout between tcp keepalive probes that the remote sitesuccessfully acknowledged. Refers to the TCP_KEEPIDLE socket option. When changed applies to new connections only.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "kafka_tcp_keepalive_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_tcp_keepalive_probe_interval_seconds": {
            "default": "60s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "TCP keepalive probe interval in seconds for kafka connections. This describes the timeout between unacknowledged tcp keepalives. Refers to the TCP_KEEPINTVL socket option. When changed applies to new connections only.",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "kafka_tcp_keepalive_probe_interval_seconds",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kafka_tcp_keepalive_probes": {
            "default": 3,
            "defined_in": "src/v/config/configuration.cc",
            "description": "TCP keepalive unacknowledge probes until the connection is considered dead for kafka connections. Refers to the TCP_KEEPCNT socket option. When changed applies to new connections only.",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "kafka_tcp_keepalive_probes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kvstore_flush_interval": {
            "default": "std::chrono::milliseconds(10)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Key-value store flush interval (ms)",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "kvstore_flush_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "kvstore_max_segment_size": {
            "default": 16777216,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Key-value maximum segment size (bytes)",
            "name": "kvstore_max_segment_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "leader_balancer_idle_timeout": {
            "default": "2min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Leadership rebalancing idle timeout",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "leader_balancer_idle_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "leader_balancer_mute_timeout": {
            "default": "5min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Leadership rebalancing mute timeout",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "leader_balancer_mute_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "leader_balancer_node_mute_timeout": {
            "default": "20s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Leadership rebalancing node mute timeout",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "leader_balancer_mute_timeout",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "leader_balancer_transfer_limit_per_shard": {
            "default": 512,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Per shard limit for in progress leadership transfers",
            "name": "leader_balancer_transfer_limit_per_shard",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_cleanup_policy": {
            "default": "model::cleanup_policy_bitflags::deletion",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default topic cleanup policy",
            "name": "log_cleanup_policy",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::cleanup_policy_bitflags",
            "visibility": "user"
        },
        "log_compaction_interval_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "How often do we trigger background compaction",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "log_compaction_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "log_compression_type": {
            "default": "model::compression::producer",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default topic compression type",
            "name": "log_compression_type",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::compression",
            "visibility": "user"
        },
        "log_message_timestamp_type": {
            "default": "model::timestamp_type::create_time",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default topic messages timestamp type",
            "name": "log_message_timestamp_type",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::timestamp_type",
            "visibility": "user"
        },
        "log_segment_size": {
            "default": 1073741824,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default log segment size in bytes for topics which do not set segment.bytes",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "log_segment_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_segment_size_jitter_percent": {
            "default": 5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Random variation to the segment size limit used for each partition",
            "maximum": 65535,
            "minimum": 0,
            "name": "log_segment_size_jitter_percent",
            "needs_restart": true,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_segment_size_max": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Upper bound on topic segment.bytes: higher values will be clamped to this limit",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "log_segment_size_max",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "log_segment_size_min": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Lower bound on topic segment.bytes: lower values will be clamped to this limit",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "log_segment_size_min",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_compacted_log_segment_size": {
            "default": 5368709120,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max compacted segment size after consolidation",
            "name": "max_compacted_log_segment_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_concurrent_producer_ids": {
            "default": "std::numeric_limits<uint64_t>::max()",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max cache size for pids which rm_stm stores inside internal state. In overflow rm_stm will delete old pids and clear their status",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "max_concurrent_producer_ids",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_kafka_throttle_delay_ms": {
            "default": "60'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Fail-safe maximum throttle delay on kafka requests",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "max_kafka_throttle_delay_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "max_version": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "max_version",
            "nullable": false,
            "type": null
        },
        "members_backend_retry_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time between members backend reconciliation loop retries ",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "members_backend_retry_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metadata_dissemination_interval_ms": {
            "default": "3'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Interaval for metadata dissemination batching",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metadata_dissemination_interval_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metadata_dissemination_retries": {
            "default": 30,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of attempts of looking up a topic's meta data like shard before failing a request",
            "maximum": 32767,
            "minimum": -32768,
            "name": "metadata_dissemination_retries",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metadata_dissemination_retry_delay_ms": {
            "default": "0'500ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Delay before retry a topic lookup in a shard or other meta tables",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metadata_dissemination_retry_delay_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metadata_status_wait_timeout_ms": {
            "default": "2s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum time to wait in metadata request for cluster health to be refreshed",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metadata_status_wait_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metrics_reporter_report_interval": {
            "default": "24h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "cluster metrics reporter report interval",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metrics_reporter_report_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metrics_reporter_tick_interval": {
            "default": "1min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cluster metrics reporter tick interval",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "metrics_reporter_tick_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "metrics_reporter_url": {
            "default": "https://m.rp.vectorized.io/v2",
            "defined_in": "src/v/config/configuration.cc",
            "description": "cluster metrics reporter url",
            "name": "metrics_reporter_url",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "tunable"
        },
        "min_version": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "min_version",
            "nullable": false,
            "type": null
        },
        "node_id": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Unique id identifying a node in the cluster. If missing, a unique id will be assigned for this node when it joins the cluster",
            "name": "node_id",
            "nullable": true,
            "type": "#/definitions/model::node_id",
            "visibility": "user"
        },
        "node_management_operation_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for executing node management operations",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "node_management_operation_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "node_status_interval": {
            "default": "100ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time interval between two node status messages. Node status messages establish liveness status outside of the Raft protocol.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "node_status_interval",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "pandaproxy_api": {
            "default": {
                "address": "net::unresolved_address(\"0.0.0.0\", 8082)",
                "authn_method": "std::nullopt"
            },
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "Rest API listen address and port",
            "name": "pandaproxy_api",
            "nullable": false,
            "type": "#/definitions/config::rest_authn_endpoint"
        },
        "pandaproxy_api_tls": {
            "defined_in": "src/v/pandaproxy/rest/configuration.cc",
            "description": "TLS configuration for Pandaproxy api",
            "name": "pandaproxy_api_tls",
            "nullable": false,
            "type": "#/definitions/config::endpoint_tls_config"
        },
        "partition_autobalancing_concurrent_moves": {
            "default": 50,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Number of partitions that can be reassigned at once",
            "name": "partition_autobalancing_concurrent_moves",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "partition_autobalancing_max_disk_usage_percent": {
            "default": 80,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Disk usage threshold that triggers moving partitions from the node",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "partition_autobalancing_max_disk_usage_percent",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "partition_autobalancing_mode": {
            "default": "model::partition_autobalancing_mode::node_add",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Partition autobalancing mode",
            "name": "partition_autobalancing_mode",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::partition_autobalancing_mode",
            "visibility": "user"
        },
        "partition_autobalancing_movement_batch_size_bytes": {
            "default": 5368709120,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Total size of partitions that autobalancer is going to move in one batch",
            "name": "partition_autobalancing_movement_batch_size_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "partition_autobalancing_node_availability_timeout_sec": {
            "default": "15min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Node unavailability timeout that triggers moving partitions from the node",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "partition_autobalancing_node_availability_timeout_sec",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "partition_autobalancing_tick_interval_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Partition autobalancer tick interval",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "partition_autobalancing_tick_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "produce_batch_delay": {
            "default": "100ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Delay (in milliseconds) to wait before sending batch",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "produce_batch_delay_ms",
            "nullable": false,
            "type": "integer"
        },
        "produce_batch_record_count": {
            "default": 1000,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Number of records to batch before sending to broker",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "produce_batch_record_count",
            "nullable": false,
            "type": "integer"
        },
        "produce_batch_size_bytes": {
            "default": 1048576,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Number of bytes to batch before sending to broker",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "produce_batch_size_bytes",
            "nullable": false,
            "type": "integer"
        },
        "quota_manager_gc_sec": {
            "default": "std::chrono::milliseconds(30000)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Quota manager GC frequency in milliseconds",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "quota_manager_gc_sec",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rack": {
            "default": null,
            "defined_in": "src/v/config/node_config.cc",
            "description": "Rack identifier",
            "name": "rack",
            "nullable": true,
            "type": "#/definitions/model::rack_id",
            "visibility": "user"
        },
        "raft_election_timeout_ms": {
            "default": "1'500ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Election timeout expressed in milliseconds",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "election_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_heartbeat_disconnect_failures": {
            "default": 3,
            "defined_in": "src/v/config/configuration.cc",
            "description": "After how many failed heartbeats to forcibly close an unresponsive TCP connection.  Set to 0 to disable force disconnection.",
            "name": "raft_heartbeat_disconnect_failures",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_heartbeat_interval_ms": {
            "default": "std::chrono::milliseconds(150)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Milliseconds for raft leader heartbeats",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_heartbeat_interval_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_heartbeat_timeout_ms": {
            "default": "3s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "raft heartbeat RPC timeout",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_heartbeat_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_io_timeout_ms": {
            "default": "10'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Raft I/O timeout",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_io_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_learner_recovery_rate": {
            "default": 104857600,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Raft learner recovery rate limit in bytes per sec",
            "name": "raft_learner_recovery_rate",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "raft_max_concurrent_append_requests_per_follower": {
            "default": 16,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of concurrent append entries requests sent by leader to one follower",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "raft_max_concurrent_append_requests_per_follower",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_max_recovery_memory": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max memory that can be used for reads in raft recovery process by default 15% of total memory",
            "name": "raft_max_recovery_memory",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_recovery_default_read_size": {
            "default": 524288,
            "defined_in": "src/v/config/configuration.cc",
            "description": "default size of read issued during raft follower recovery",
            "name": "raft_recovery_default_read_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_replicate_batch_window_size": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Max size of requests cached for replication",
            "name": "raft_replicate_batch_window_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_smp_max_non_local_requests": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of x-core requests pending in Raft seastar::smp group. (for more details look at `seastar::smp_service_group` documentation)",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "raft_smp_max_non_local_requests",
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_timeout_now_timeout_ms": {
            "default": "1s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for a timeout now request",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_timeout_now_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "raft_transfer_leader_recovery_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout waiting for follower recovery when transferring leadership",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "raft_transfer_leader_recovery_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "readers_cache_eviction_timeout_ms": {
            "default": "30s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Duration after which inactive readers will be evicted from cache",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "readers_cache_eviction_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_batch_cache_min_free": {
            "default": 67108864,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Free memory limit that will be kept by batch cache background reclaimer",
            "name": "reclaim_batch_cache_min_free",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_growth_window": {
            "default": "3'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Length of time in which reclaim sizes grow",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "reclaim_growth_window",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_max_size": {
            "default": 4194304,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum batch cache reclaim size",
            "name": "reclaim_max_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_min_size": {
            "default": 131072,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum batch cache reclaim size",
            "name": "reclaim_min_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "reclaim_stable_window": {
            "default": "10'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Length of time above which growth is reset",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "reclaim_stable_window",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "recovery_append_timeout_ms": {
            "default": "5s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for append entries requests issued while updating stale follower",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "recovery_append_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "release_cache_on_segment_roll": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Free cache when segments roll",
            "name": "release_cache_on_segment_roll",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "tunable"
        },
        "replicate_append_timeout_ms": {
            "default": "3s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout for append entries requests issued while replicating entries",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "replicate_append_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "retention_bytes": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Default max bytes per partition on disk before triggering a compaction",
            "name": "retention_bytes",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "retention_local_target_bytes_default": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Local retention size target for partitions of topics with cloud storage write enabled",
            "name": "retention_local_target_bytes_default",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "retention_local_target_ms_default": {
            "default": "24h",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Local retention time target for partitions of topics with cloud storage write enabled",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "retention_local_target_ms_default",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "retries": {
            "default": 5,
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Number of times to retry a request to a broker",
            "name": "retries",
            "nullable": false,
            "type": "integer"
        },
        "retry_base_backoff": {
            "default": "100ms",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Delay (in milliseconds) for initial retry backoff",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "retry_base_backoff_ms",
            "nullable": false,
            "type": "integer"
        },
        "rm_sync_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time to wait state catch up before rejecting a request",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "rm_sync_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "rm_violation_recovery_policy": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "rm_violation_recovery_policy",
            "nullable": false,
            "type": null
        },
        "rpc_server": {
            "default": "net::unresolved_address(\"127.0.0.1\", 33145)",
            "defined_in": "src/v/config/node_config.cc",
            "description": "IpAddress and port for RPC server",
            "name": "rpc_server",
            "nullable": false,
            "type": "#/definitions/net::unresolved_address",
            "visibility": "user"
        },
        "rpc_server_listen_backlog": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "TCP connection queue length for Kafka server and internal RPC server",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "rpc_server_listen_backlog",
            "nullable": true,
            "type": "integer",
            "visibility": "user"
        },
        "rpc_server_tcp_recv_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Internal RPC TCP receive buffer size in bytes.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "rpc_server_tcp_recv_buf",
            "nullable": true,
            "type": "integer"
        },
        "rpc_server_tcp_send_buf": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Internal RPC TCP transmit buffer size in bytes.",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "rpc_server_tcp_send_buf",
            "nullable": true,
            "type": "integer"
        },
        "rpc_server_tls": {
            "default": "tls_config()",
            "defined_in": "src/v/config/node_config.cc",
            "description": "TLS configuration for RPC server",
            "name": "rpc_server_tls",
            "nullable": false,
            "type": "#/definitions/tls_config",
            "visibility": "user"
        },
        "rps_limit_acls_and_users_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller acls and users operations",
            "name": "rps_limit_acls_and_users_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rps_limit_configuration_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller configuration operations",
            "name": "rps_limit_configuration_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rps_limit_move_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller move operations",
            "name": "rps_limit_move_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rps_limit_node_management_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller node management operations",
            "name": "rps_limit_node_management_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "rps_limit_topic_operations": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Rate limit for controller topic operations",
            "name": "rps_limit_topic_operations",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "sasl_mechanism": {
            "default": "",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "The SASL mechanism to use when connecting",
            "name": "sasl_mechanism",
            "nullable": false,
            "type": "string"
        },
        "schema_registry_api": {
            "default": {
                "address": "net::unresolved_address(\"0.0.0.0\", 8081)",
                "authn_method": "std::nullopt"
            },
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "Schema Registry API listen address and port",
            "name": "schema_registry_api",
            "nullable": false,
            "type": "#/definitions/config::rest_authn_endpoint"
        },
        "schema_registry_api_tls": {
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "TLS configuration for Schema Registry API",
            "name": "schema_registry_api_tls",
            "nullable": false,
            "type": "#/definitions/config::endpoint_tls_config"
        },
        "schema_registry_replication_factor": {
            "default": null,
            "defined_in": "src/v/pandaproxy/schema_registry/configuration.cc",
            "description": "Replication factor for internal _schemas topic.  If unset, defaults to `default_topic_replication`",
            "maximum": 32767,
            "minimum": -32768,
            "name": "schema_registry_replication_factor",
            "nullable": true,
            "type": "integer"
        },
        "scram_password": {
            "default": "",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Password to use for SCRAM authentication mechanisms",
            "is_secret": true,
            "name": "scram_password",
            "nullable": false,
            "type": "string"
        },
        "scram_username": {
            "default": "",
            "defined_in": "src/v/kafka/client/configuration.cc",
            "description": "Username to use for SCRAM authentication mechanisms",
            "name": "scram_username",
            "nullable": false,
            "type": "string"
        },
        "seed_server_meta_topic_partitions": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "seed_server_meta_topic_partitions",
            "nullable": false,
            "type": null
        },
        "seed_servers": {
            "defined_in": "src/v/config/node_config.cc",
            "description": "List of the seed servers used to join current cluster. If the seed_server list is empty the node will be a cluster root and it will form a new cluster",
            "items": {
                "type": "#/definitions/seed_server"
            },
            "name": "seed_servers",
            "nullable": false,
            "type": "array",
            "visibility": "user"
        },
        "segment_appender_flush_timeout_ms": {
            "default": "std::chrono::milliseconds(1s)",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum delay until buffered data is written",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "segment_appender_flush_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "segment_fallocation_step": {
            "default": 33554432,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size for segments fallocation",
            "name": "segment_fallocation_step",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "seq_table_min_size": {
            "default": 1000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Minimum size of the seq table non affected by compaction",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "seq_table_min_size",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "storage_compaction_index_memory": {
            "default": 134217728,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of bytes that may be used on each shard by compactionindex writers",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "storage_compaction_index_memory",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_ignore_timestamps_in_future_sec": {
            "default": null,
            "defined_in": "src/v/config/configuration.cc",
            "description": "If set, timestamps more than this many seconds in the future relative tothe server's clock will be ignored for data retention purposes, and retention will act based on another timestamp in the same segment, or the mtime of the segment file if no valid timestamp is available",
            "maximum": 17179869183,
            "minimum": -17179869184,
            "name": "storage_ignore_timestamps_in_future_sec",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_max_concurrent_replay": {
            "default": 1024,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of partitions' logs that will be replayed concurrently at startup, or flushed concurrently on shutdown.",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "storage_max_concurrent_replay",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_min_free_bytes": {
            "default": 5368709120,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold of minimum bytes free space before rejecting producers.",
            "name": "storage_min_free_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_read_buffer_size": {
            "default": 131072,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of each read buffer (one per in-flight read, per log segment)",
            "name": "storage_read_buffer_size",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_read_readahead_count": {
            "default": 10,
            "defined_in": "src/v/config/configuration.cc",
            "description": "How many additional reads to issue ahead of current read location",
            "maximum": 32767,
            "minimum": -32768,
            "name": "storage_read_readahead_count",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_space_alert_free_threshold_bytes": {
            "default": 0,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold of minimim bytes free space before setting storage space alert",
            "name": "storage_space_alert_free_threshold_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_space_alert_free_threshold_percent": {
            "default": 5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Threshold of minimim percent free space before setting storage space alert",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "storage_space_alert_free_threshold_percent",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "storage_strict_data_init": {
            "default": false,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Requires that an empty file named `.redpanda_data_dir` be present in the data directory. Redpanda will refuse to start if it is not found.",
            "name": "storage_strict_data_init",
            "needs_restart": false,
            "nullable": false,
            "type": "boolean",
            "visibility": "user"
        },
        "storage_target_replay_bytes": {
            "default": 10737418240,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target bytes to replay from disk on startup after clean shutdown: controls frequency of snapshots and checkpoints",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "storage_target_replay_bytes",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "superusers": {
            "defined_in": "src/v/config/configuration.cc",
            "description": "List of superuser usernames",
            "name": "superusers",
            "needs_restart": false,
            "nullable": false,
            "type": "string",
            "visibility": "user"
        },
        "target_quota_byte_rate": {
            "default": 2147483648,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Target quota byte rate (bytes per second) - 2GB default",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "target_quota_byte_rate",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "tm_sync_timeout_ms": {
            "default": "10s",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Time to wait state catch up before rejecting a request",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "tm_sync_timeout_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "tm_violation_recovery_policy": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "tm_violation_recovery_policy",
            "nullable": false,
            "type": null
        },
        "topic_fds_per_partition": {
            "default": 5,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Required file handles per partition when creating topics",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "name": "topic_fds_per_partition",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "topic_memory_per_partition": {
            "default": 1048576,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Required memory per partition when creating topics",
            "name": "topic_memory_per_partition",
            "needs_restart": false,
            "nullable": true,
            "type": "integer",
            "visibility": "tunable"
        },
        "topic_partitions_per_shard": {
            "default": 7000,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Maximum number of partitions which may be allocated to one shard (CPU core)",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "topic_partitions_per_shard",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "topic_partitions_reserve_shard0": {
            "default": 2,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Reserved partition slots on shard (CPU core) 0 on each node.  If this is >= topic_partitions_per_core, no data partitions will be scheduled on shard 0",
            "maximum": 4294967295,
            "minimum": 0,
            "name": "topic_partitions_reserve_shard0",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "transaction_coordinator_cleanup_policy": {
            "default": "model::cleanup_policy_bitflags::deletion",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Cleanup policy for a transaction coordinator topic",
            "name": "transaction_coordinator_cleanup_policy",
            "needs_restart": false,
            "nullable": false,
            "type": "#/definitions/model::cleanup_policy_bitflags",
            "visibility": "user"
        },
        "transaction_coordinator_delete_retention_ms": {
            "default": "10080min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "delete segments older than this - default 1 week",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "transaction_coordinator_delete_retention_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "transaction_coordinator_log_segment_size": {
            "default": 1073741824,
            "defined_in": "src/v/config/configuration.cc",
            "description": "How large in bytes should each log segment be (default 1G)",
            "maximum": 18446744073709551615,
            "minimum": 0,
            "name": "transaction_coordinator_log_segment_size",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "transaction_coordinator_replication": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "transaction_coordinator_replication",
            "nullable": false,
            "type": null
        },
        "transactional_id_expiration_ms": {
            "default": "10080min",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Producer ids are expired once this time has elapsed after the last write with the given producer id.",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "transactional_id_expiration_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "tx_timeout_delay_ms": {
            "default": "1000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Delay before scheduling next check for timed out transactions",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "tx_timeout_delay_ms",
            "nullable": false,
            "type": "integer",
            "visibility": "user"
        },
        "use_scheduling_groups": {
            "defined_in": "src/v/config/configuration.cc",
            "description": null,
            "is_deprecated": true,
            "name": "use_scheduling_groups",
            "nullable": false,
            "type": null
        },
        "wait_for_leader_timeout_ms": {
            "default": "5'000ms",
            "defined_in": "src/v/config/configuration.cc",
            "description": "Timeout (ms) to wait for leadership in metadata cache",
            "maximum": 17592186044415,
            "minimum": -17592186044416,
            "name": "wait_for_leader_timeout_ms",
            "needs_restart": false,
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        },
        "zstd_decompress_workspace_bytes": {
            "default": 8388608,
            "defined_in": "src/v/config/configuration.cc",
            "description": "Size of the zstd decompression workspace",
            "name": "zstd_decompress_workspace_bytes",
            "nullable": false,
            "type": "integer",
            "visibility": "tunable"
        }
    }
}